/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans; 
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> path = {} ;
        if(!root) return ans;
        helper(root,targetSum,0,path);
        return ans ;
    }
    
    void helper(TreeNode *root , int target, int currentSum, vector<int> currentPath) {
        if(!root) return ;
        /*add node to path*/
        currentSum += root->val ;
        currentPath.push_back(root->val);
        if(!root->right && !root->left )
            if(currentSum  == target ) ans.push_back(currentPath);
            else return  ;
        helper(root->right , target , currentSum, currentPath) ;
        helper(root->left , target , currentSum, currentPath) ;
    }
};
