/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:  
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int pos =0;
        return bst(preorder, pos, INT_MAX, INT_MIN); 
    }
    
    TreeNode*bst(vector<int>&preorder, int &pos, int max, int min){
        if (pos>=preorder.size()) return NULL;
        int val = preorder[pos];
        if (val > max || val <min) return NULL;
        ++pos;
        TreeNode* node = new TreeNode(val);
        node->left = bst(preorder, pos, val, min);
        node->right = bst(preorder, pos, max, val);
        return node;
    }
};


