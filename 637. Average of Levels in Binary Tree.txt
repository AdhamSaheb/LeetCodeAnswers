/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> averages; 
        queue<TreeNode*> q;
        q.push(root);
        int currLevel=1, nextLevel=0;
        long sum=0, levelCount=1; 
        TreeNode *front;
        while(q.size()) {
            front  = q.front(); q.pop();
            sum += front->val;
            currLevel--;
            if(front->left){
                q.push(front->left);
                nextLevel++;
            }
            if(front->right){
                q.push(front->right);
                nextLevel++;
            }
            if(!currLevel){
                averages.push_back((double)sum/(double)levelCount);
                sum = 0;
                levelCount = nextLevel;
                swap(currLevel,nextLevel);
            }
        }
        return averages;
    }
};
