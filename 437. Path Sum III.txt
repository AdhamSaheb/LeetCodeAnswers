/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pathSum(TreeNode* root, int targetSum) {
        int ans = 0 ; 
        unordered_map<int,int> mp ;
        dfs(root,targetSum,0,ans,mp);
        return ans ;
    }
    
    void dfs(TreeNode *root, int targetSum, int currentSum, int &ans, unordered_map<int,int> &mp){
        if(!root) return ;
        currentSum += root->val;
        if(currentSum == targetSum)  ans ++ ;
        if(mp.count(currentSum - targetSum)) ans += mp[currentSum - targetSum];
        mp[currentSum] ++ ;
        dfs(root->right,targetSum,currentSum,ans,mp);
        dfs(root->left,targetSum,currentSum,ans,mp);
        mp[currentSum] -- ;
    }
};
