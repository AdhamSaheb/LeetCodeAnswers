class Solution {
public:
    vector<vector<int>> ans ; 
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector<int> temp = {0}; 
        helper(temp,graph,0);
        return ans ;
    }
    
    void helper(vector<int> &path ,vector<vector<int>>& graph , int current) {
        if(current == graph.size()-1){
            ans.push_back(path);
            return ;
        }
        vector<int> possibilities = graph[current] ;        
        for(int possibility : possibilities) {
            if(find(path.begin() , path.end() , possibility ) == path.end() ) {
                vector<int> temp = path;
                temp.push_back(possibility);
                helper(temp,graph,possibility);
            }
        }
    }
};
