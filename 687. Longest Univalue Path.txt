/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int longestUnivaluePath(TreeNode* root) {
        int ans = 0 ;
        helper(root,ans);
        return ans ;
    }
    
    void helper(TreeNode *root, int &ans){
        if(!root) return;
        int left = countVal(root->left,root->val);
        int right = countVal(root->right,root->val);
        ans = max(ans, left + right);
        helper(root->left,ans);
        helper(root->right,ans);
    }
    
    int countVal(TreeNode *root,int val){
        if(!root or root->val != val ) return 0 ;
        return max(countVal(root->right,val) , countVal(root->left,val)) + 1;
    }
};
