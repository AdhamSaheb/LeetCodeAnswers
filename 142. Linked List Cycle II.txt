/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head) return NULL ;
        ListNode* p1 = head->next ;
        ListNode* p2 = (head->next) ? head->next->next : NULL ;  
        while(p1  && p2 ){
            if(p1 != p2 ) {
                p1 = p1->next; 
                p2 = (p2->next) ?  p2->next->next : NULL ;
            }
            else {//cycle detected 
                p1 = head ; 
                while(p1 != p2 ) {
                    p1 = p1->next ; 
                    p2 = p2->next ;
                }
                return p1 ;
            } 
        }
        return NULL ;
    }
};


