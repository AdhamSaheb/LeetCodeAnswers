/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        if(!root) return {} ;
        int currLevel =1, nextLevel =0 ,max = INT_MIN ; 
        TreeNode* temp ;
        vector<int> ans ;
        queue<TreeNode*>  q; 
        q.push(root);
        while(q.size()){
            temp = q.front();
            q.pop();
            currLevel -- ;
            if(temp->val > max )  max = temp->val;
            if(temp->left) {
                q.push(temp->left);
                nextLevel ++ ;
            }
            if(temp->right) {
                q.push(temp->right);
                nextLevel ++ ;
            }
            if(!currLevel){
                ans.push_back(max);
                max = INT_MIN ;
                swap(currLevel,nextLevel);
            }
             
        }
        return ans ;
        
    }
};
