/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
        vector<int> nums,ansList ;
        inOrder(root,nums);
        int ans = INT_MIN, currAns =0, curr ;
        int i =0 ;
        while( i<nums.size() ) {
            curr = nums[i] ;  
            currAns =0 ;
            while(i<nums.size() && nums[i] == curr) {
                i++ ; 
                currAns ++ ;
            }
            if(currAns == ans) ansList.push_back(curr);
            else if (currAns > ans){
                ansList = {} ;
                ansList.push_back(curr);
            }else continue ;
            ans = max(ans,currAns);
        }
        return ansList ; 
    }
    
    void inOrder(TreeNode* root, vector<int> &nums){
        if(!root) return ; 
        inOrder(root->left,nums);
        nums.push_back(root->val);
        inOrder(root->right,nums);
    }
};

