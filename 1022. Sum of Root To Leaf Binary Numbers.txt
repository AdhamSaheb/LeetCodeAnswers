/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> nums ; 
    int sumRootToLeaf(TreeNode* root) {
        helper(root, 0);
        return accumulate(nums.begin() , nums.end() ,0) ;
        
    }
    
    void helper(TreeNode* root , int num ) {
        if(!root) return ;
        int newNum = (num <<1) | root->val ;
        if(!root->right && !root->left) nums.push_back(newNum);
        else{
            helper(root->right , newNum);
            helper(root->left, newNum);
        }
    }
};
