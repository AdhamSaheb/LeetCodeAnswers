class Solution {
public:
    int sumOddLengthSubarrays(vector<int>& arr) {
        if (arr.size()==0) return 0; 
        
        int ans =0 ; 
        int maxWindowSize = (arr.size()%2!=0 ) ? arr.size() : arr.size()-1 ; 
        for (int i=0 ; i< maxWindowSize ; i+=2) {
            int low = 0,high = low + i , temp =0 ;
            for (int j=low ; j<=high ; j ++) {
                temp +=arr[j];
            }
            ans += temp ;
            while (high < arr.size()-1 ) {
                ans += ((temp - arr[low]) + arr[high+1] ) ; 
                temp = ((temp - arr[low]) + arr[high+1] ) ;
                low ++ ; high ++ ;
            }

            }
        return ans ;

        }

     
};
// This is a modification on sliding window, instead of adding the whole window each time, add the new elemnt and remove the the lower one 
// This will remove a loop
