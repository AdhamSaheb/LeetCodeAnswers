/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        
        vector<int> ans,level ;
        
        if(!root) return ans ;
        queue<TreeNode*> q ;
        q.push(root);
        int currLevel =1 , nextLevel =0 ;
        while( q.size() ){
            TreeNode *temp = q.front();
            q.pop();
            currLevel -- ;
            //opearte
            level.push_back(temp->val);
            if(temp->right){
                q.push(temp->right );
                nextLevel ++ ;
            }
            if(temp->left){
                q.push(temp->left );
                nextLevel ++ ;
            }
            if(!currLevel){
                swap(currLevel,nextLevel);
                ans.push_back(level[0]);
                level = {} ;
            }
        }
        return ans ;
    }
};
