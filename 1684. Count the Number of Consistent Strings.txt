class Solution {
public:
    int countConsistentStrings(string allowed, vector<string>& words) {
        int ans =0 ;
        int allowedMap[28] = {0} ; // occurances of allowed maped to an array of 28 indecies (1 if letter appears in allowed)
        for (int i =0 ; i<allowed.size();i++) allowedMap[allowed[i] - 'a']++ ; ; 
        for (string word : words) {
            //for each string inside words, map letters in a 28 index array and put 1 at each index of the letter that exists, then compare 2 arraysâ€º
            int tempMap[28] = {0}; 
            bool flag = true ; 
            for (int i =0 ; i<word.size();i++) tempMap[word[i] - 'a']++ ; 
            for (int i =0 ; i<word.size();i++) {
                if(  (tempMap[word[i]-'a'] >= 1) && (allowedMap[word[i] - 'a'] == 0)  ) { 
                    flag = false ;
                    break ;
                }
            }
            if(flag) ans ++ ;

            
        } 
        return ans ;
    }
};
