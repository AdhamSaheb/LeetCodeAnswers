/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    int maxDepth(Node* root) {
        int depth = 0;
        if(!root) return 0 ;
        queue<Node*> q ;
        q.push(root);
        int currLevel = 1,nextLevel = 0 ; 
        while(q.size()){
            Node* front = q.front();
            q.pop(); 
            currLevel -- ;
            for(Node* child : front->children) {
                nextLevel++ ;
                q.push(child);
            }
            if(!currLevel){
                swap(currLevel,nextLevel);
                depth ++ ;
            }
        }

        return depth ;
    }
};
