/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> leaves1, leaves2 ; 
        dfs(root1,leaves1);
        dfs(root2,leaves2);
        return compare(leaves1,leaves2);
    }
    
    void dfs(TreeNode* root, vector<int> &leaves) {
        if(!root) return ;
        if(!root->right && !root->left)  leaves.push_back(root->val);
        dfs(root->left,leaves); dfs(root->right,leaves);
    }
    
    
    bool compare(vector<int> a , vector<int> b){
        if(a.size() != b.size() ) return false ;
        for(int i=0 ;i<a.size(); i++ )
            if(a[i] != b[i]) return false ;
        return true ;
    }
};
