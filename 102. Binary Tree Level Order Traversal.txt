/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans ; 
    vector<vector<int>> levelOrder(TreeNode* root) {
         if(!root) return ans ; 
         helper(root,0) ;
        //cout << ans.size()  ; 
        return ans ; 
    }
    
    void helper (TreeNode* root , int level) {
        //if there is no index at level , create one , else just add it to level vector 
        if (level >= ans.size() ) {
            vector<int> temp = {root -> val} ; 
            ans.push_back(temp);
        }
        else ans[level].push_back(root->val) ;
        if(root-> left) helper(root->left,level+1 );
        if(root-> right) helper(root->right,level+1 ); 
       
    }
};