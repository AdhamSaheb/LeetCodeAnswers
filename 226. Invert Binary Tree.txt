/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    /*Iterative*/
    // TreeNode* invertTree(TreeNode* root) {
    //     if(!root) return root ; 
    //     dfs(root); 
    //     return root ;
    // }
    // void dfs(TreeNode* root) {
    //     swap(root->right,root->left); 
    //     if(root->right) dfs(root->right);
    //     if(root->left) dfs(root->left) ; 
    // }
    /*Recursive*/
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return root; 
        queue<TreeNode*> q ;
        q.push(root);
        TreeNode* front ;
        while(q.size()){
            front = q.front();
            q.pop();
            swap(front->right,front->left);
            if(front->right) q.push(front->right);
            if(front->left) q.push(front->left);
        }
        return root ;
    }
    
};
