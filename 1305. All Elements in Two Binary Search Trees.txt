/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        vector<int> nodes1, nodes2, ans ;
        inOrder(root1,nodes1);
        inOrder(root2,nodes2);
        int ptr1 =0 , ptr2=0 ;
        while(ptr1 < nodes1.size() and ptr2<nodes2.size()) {
           if (nodes1[ptr1] <= nodes2[ptr2]) {
                ans.push_back(nodes1[ptr1]);
                ptr1++;
            }else {
               ans.push_back(nodes2[ptr2]);
               ptr2++;
           }
        }
        while(ptr1 < nodes1.size() ){ ans.push_back(nodes1[ptr1]); ptr1++;}
        while(ptr2 < nodes2.size() ){ ans.push_back(nodes2[ptr2]); ptr2++;}
        return ans;
    }
    
    void inOrder(TreeNode* root,vector<int> &nums){
        if(!root) return ;
        inOrder(root->left,nums);
        nums.push_back(root->val);
        inOrder(root->right,nums);
    }
};
