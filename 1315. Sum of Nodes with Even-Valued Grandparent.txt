/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumEvenGrandparent(TreeNode* root) {
        return helper(root);
    }
    
    
    int helper(TreeNode* root){
        if(!root) return 0 ;
        int sum = 0 ;
        if(!(root->val % 2)) { // even
            if(root->right and root->right->right) sum += root->right->right->val;
            if(root->right and root->right->left) sum += root->right->left->val;
            if(root->left and root->left->right) sum += root->left->right->val;
            if(root->left and root->left->left) sum += root->left->left->val;
        }
        return sum + helper(root->left) + helper(root->right);
    }
};

/*
if node is even : sum = sum + grandparents 
return sum + func(left) + func(right)

*/
