// *
//  * Definition for a binary tree node.
//  * struct TreeNode {
//  *     int val;
//  *     TreeNode *left;
//  *     TreeNode *right;
//  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
//  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
//  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
//  * };

class Solution {
public:
    string ans = "" ;
    string tree2str(TreeNode* root) {
        ans += to_string(root->val); 
        if(!root->left && !root->right) return ans ; 
        helper(root->left) ;
        if(root->right) helper(root->right) ;
        return ans ;
    }
    
    void helper(TreeNode* root) {
        if(!root) {
            ans += "()" ;
            return ; 
        }
        ans += "(" ;
        ans += to_string(root->val);
        if(!root->right && !root->left) { // leaf 
            ans += ")" ;
            return ;
        }
        helper(root->left);
        if(root->right) helper(root->right);
        ans += ")";
    }
};
