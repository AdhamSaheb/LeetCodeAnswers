class Solution {
public:
    
    struct compare{
        bool operator()(const pair<int,int> &a , const pair<int,int> &b){
            return a.first < b.first ;
        }
    };
    vector<string> findRelativeRanks(vector<int>& score) {
        vector<string> ans(score.size(),"0");
        priority_queue<pair<int,int>,vector<pair<int,int>>,compare> maxHeap;
        for(int i = 0 ; i <score.size() ; i++) {
            maxHeap.push({score[i],i});
        }
        int counter = 1 ;
        while(maxHeap.size()){
            string res; 
            if(counter == 1 ) res = "Gold Medal";
            else if(counter == 2 ) res = "Silver Medal";
            else if(counter == 3 ) res = "Bronze Medal";
            else res = to_string(counter);
            ans[maxHeap.top().second] = res;
            maxHeap.pop();
            counter ++ ;
        }
        return ans;
    }
};
