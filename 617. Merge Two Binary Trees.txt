/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        return dfs(root1,root2);   
    }
    
    TreeNode* dfs(TreeNode* root1, TreeNode* root2){
        if(!root1 and !root2) return nullptr ;
        if(!root1) return root2 ;
        if(!root2) return root1;
        int val1 = root1 ? root1->val : 0 ;
        int val2 = root2 ? root2->val : 0 ;
        TreeNode *root = new TreeNode(val1+val2);
        root->right = dfs(root1->right, root2->right);
        root->left = dfs(root1->left, root2->left);
        return root ;
    }
};
