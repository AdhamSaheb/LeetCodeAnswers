/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head) return head; 
        int length = 0 , currnet = 0 ;
        ListNode *ptr = head ; 
        ListNode *newHead ; 
        while(ptr){
            length ++ ; 
            ptr = ptr->next ;
        }
        if(k>=length) k = k%length ; 
        if(!k) return head ;
        ptr = head ; 
        for(int i = 0 ;i<length-k-1 ; i++) ptr= ptr->next ; // at 3 
        newHead = ptr->next ;
        ptr->next = NULL;
        ptr = newHead ; 
        while(ptr->next) ptr = ptr->next ;
        ptr->next = head ; 
        for(int i=1 ; i<=277 ; i ++) cout << i << "," ;
        return newHead ;
        
    }
};
