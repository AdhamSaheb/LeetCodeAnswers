/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        
        queue<TreeNode*> q,p ;
        vector<vector<int>> ans ;
        if(!root) return ans ;
        vector<int> level ;
        q.push(root); 
        
        while(q.size()){
            TreeNode* front = q.front() ;
            q.pop() ;
            level.push_back(front->val);
            if(front->left) p.push(front->left);
            if(front->right) p.push(front->right);
            if(q.empty()){
                ans.push_back(level);
                level= {} ;
                swap(p,q);
            }
        }
        reverse(ans.begin(),ans.end());
        return ans ;
        
    }
};
