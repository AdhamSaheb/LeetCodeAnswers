/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class FindElements {
public:
    TreeNode *root;
    FindElements(TreeNode* root) {
        if(root) root->val = 0;
        helper(root);
        this-> root = root ;
    }
    
    bool find(int target) {
        return findHelper(this->root,target);
    }
    
    void helper(TreeNode *root){
        if(!root) return ;
        if(root->right) root->right->val = (root->val * 2) + 2 ;
        if(root->left) root->left->val = (root->val * 2) + 1 ;
        helper(root->right); helper(root->left);
    }
    
    bool findHelper(TreeNode *root, int target){
        if(!root) return false ;
        if(target == root->val) return true ;
        return findHelper(root->right,target) | findHelper(root->left,target); 
         

    }
};

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements* obj = new FindElements(root);
 * bool param_1 = obj->find(target);
 */
