
class Solution {
public:
    int trap(vector<int>& height) {
        int left=0; int right=height.size()-1;
        int res=0;
        int maxleft=0, maxright=0;
        while(left<=right){
            if(height[left]<=height[right]){
                if(height[left]>=maxleft) maxleft=height[left];
                else res+=maxleft-height[left];
                left++;
            }
            else{
                if(height[right]>=maxright) maxright= height[right];
                else res+=maxright-height[right];
                right--;
            }
        }
        return res;
    }
};

// the main idea is that water is filled when height decreses, wither moving from hi to lo or lo to high
// keep track of the max left and right heights traverse with 2 pointers ltr and rtl, when moving to a smaller height, increment ans by the differnece between max left/right and current for both left and right values 
