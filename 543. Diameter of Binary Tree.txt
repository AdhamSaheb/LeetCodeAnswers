/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0 ;
    int diameterOfBinaryTree(TreeNode* root) {
        int temp =  helper(root->right) + helper(root->left) ; 
        return max(ans,temp) ;
    }
    
    int helper(TreeNode *root) {
        if(!root) return 0 ;
        if(!root->left && !root->right) return 1 ;
        int left = (root->left)  ? helper(root->left) : INT_MIN; 
        int right = (root->right)  ? helper(root->right) : INT_MIN; 
        ans = max(ans , left+right);
        return 1 +  max( left , right  ) ;
    }
};
