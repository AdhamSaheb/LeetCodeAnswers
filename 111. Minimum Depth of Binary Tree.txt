/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(!root) return 0; 
        queue<TreeNode*> q,p ;
        int minVal = 1 ;
        q.push(root);
        while(!q.empty()){
            TreeNode* front = q.front();
            q.pop();

            if(!front->left && !front->right){
               return minVal ;
            }
            else {
                if(front-> right) p.push(front->right);
                if(front->left ) p.push(front->left);
             
            }
            //swap
            if(q.empty()) {
                minVal ++ ;
                swap(q,p); 
            }
        }
        
        return minVal ;
        
    }
};
