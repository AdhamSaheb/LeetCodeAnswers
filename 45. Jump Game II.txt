class Solution {
public:
    int jump(vector<int>& nums) {
        int moves = 0 , currLevel = 1 , nextLevel = 0 ;
        unordered_map<int,bool> visited;
        queue<int> q ; 
        q.push(0);
        while(q.size()){
            int front = q.front(); q.pop();
            currLevel -- ;
            if(front == nums.size() -1 ) return moves ;
            if(front > nums.size() - 1 ) continue ; 
            for(int i = 1 ; i<=nums[front];i++){
                if(!visited.count(front+i)){
                    visited[front+i] =1 ;
                    q.push(front + i);
                    nextLevel ++ ;
                }
            }
            if(!currLevel){
                moves ++ ;
                swap(currLevel,nextLevel);
            }
        }
        return moves ;
    }
};
